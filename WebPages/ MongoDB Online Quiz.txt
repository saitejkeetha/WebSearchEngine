https://www.tutorialspoint.com/mongodb/mongodb_online_quiz.htm
MongoDB Online Quiz Ã— Home Jobs Tools Coding Ground Current Affairs UPSC Notes Online Tutors Whiteboard Tutorix Login Categories Academic Tutorials Big Data & Analytics Computer Programming Computer Science Databases DevOps Digital Marketing Engineering Tutorials Exams Syllabus Famous Monuments GATE Exams Tutorials Latest Technologies Machine Learning Mainframe Development Management Tutorials Mathematics Tutorials Microsoft Technologies Misc tutorials Mobile Development Java Technologies Python Technologies SAP Tutorials Programming Scripts Selected Reading Software Quality Soft Skills Telecom Tutorials UPSC IAS Exams Web Development Sports Tutorials XML Technologies Multi-Language Interview Questions Q/A Library eBooks Courses MongoDB Tutorial MongoDB - Home MongoDB - Overview MongoDB - Advantages MongoDB - Environment MongoDB - Data Modeling MongoDB - Create Database MongoDB - Drop Database MongoDB - Create Collection MongoDB - Drop Collection MongoDB - Data Types MongoDB - Insert Document MongoDB - Query Document MongoDB - Update Document MongoDB - Delete Document MongoDB - Projection MongoDB - Limiting Records MongoDB - Sorting Records MongoDB - Indexing MongoDB - Aggregation MongoDB - Replication MongoDB - Sharding MongoDB - Create Backup MongoDB - Deployment MongoDB - Java MongoDB - PHP Advanced MongoDB MongoDB - Relationships MongoDB - Database References MongoDB - Covered Queries MongoDB - Analyzing Queries MongoDB - Atomic Operations MongoDB - Advanced Indexing MongoDB - Indexing Limitations MongoDB - ObjectId MongoDB - Map Reduce MongoDB - Text Search MongoDB - Regular Expression Working with Rockmongo MongoDB - GridFS MongoDB - Capped Collections Auto-Increment Sequence MongoDB Useful Resources MongoDB - Questions and Answers MongoDB - Quick Guide MongoDB - Useful Resources MongoDB - Discussion Selected Reading UPSC IAS Exams Notes Developer's Best Practices Questions and Answers Effective Resume Writing HR Interview Questions Computer Glossary Who is Who MongoDB Online Quiz Advertisements Previous Page Next Page   Following quiz provides Multiple Choice Questions (MCQs) related to MongoDB Framework. You will have to read all the given answers and click over the correct answer. If you are not sure about the answer then you can check the answer using Show Answer button. You can use Next Quiz button to check new set of questions in the quiz. Q 1 - Consider a collection posts which has fields: _id, post_text, post_author, post_timestamp, post_tags etc. Which of the following query retrieves ONLY the key named post_text from the first document retrieved? A - db.posts.find({},{_id:0, post_text:1}) B - db.posts.findOne({post_text:1}) C - db.posts.finOne({},{post_text:1}) D - db.posts.finOne({},{_id:0, post_text:1}) Answer : D Explanation By default, MongoDB returns the _id field with each document. So in case you want ONLY the post_text field, you will have to exclude the _id field explicitly. Also, since we have to retrieve only the first document we have to use findOne and not find. Show Answer Q 2 - What is the maximum size of a MongoDB document? A - 2 MB B - 16 MB C - 12 MB D - There is no maximum size. It depends on the RAM. Answer : B Explanation The maximum BSON document size is 16 megabytes. The maximum document size helps ensure that a single document cannot use excessive amount of RAM or, during transmission, excessive amount of bandwidth. Show Answer Q 3 - Which of the following operations on a single document will operate atomically? A - update B - $push C - Both a and b D - None of the above Answer : C Explanation Both the update and $push operators will operate in an atomic way. Show Answer Q 4 - What does the following query do when performed on the posts collection? db.posts.update({_id:1},{$set:{Author:”Tom"}}) A - Sets the complete document with _id as 1 with the document specified in second parameter by replacing it completely B - Adds a new field Author in the searched collection if not already present C - Updates only the Author field of the document with _id as 1 D - Both b and c Answer : D Explanation $set sets the specific fields in the matched documents or adds them as a new field if not already present. Show Answer Q 5 - Which option should be used with findAndModify() command to return the modified document instead of the pre-modification document? A - findAndModify by default returns the pre-modification document B - Set {new : true} C - Use the POST version of findAndModify called findAndModifyPost D - Both b and c are valid Answer : B Explanation When true, returns the modified document rather than the original. The findAndModify() method ignores the new option for remove operations. The default is false. Show Answer Q 6 - Which is the correct order (lowest to highest) in which MongoDB compares the BSON types? A - Null, Number, String and Object B - Number, Null, String and Object C - String, Null, Number and Object D - Null, Number, Object and String Answer : A Explanation This is the defined order in which the bson types are compared. There are various other fields as per the BSON specification which can be found here: http://docs.mongodb.org/manual/reference/bson-types/ Show Answer Q 7 - What does the following aggregate query perform?  db.posts.aggregate( [ { $match : { likes : { $gt : 100, $lte : 200 } } }, { $group: { _id: null, count: { $sum: 1 } } } ] ); A - Calculates the number of posts with likes between 100 and 200 B - Groups the posts by number of likes (101, 102, 103….) by adding 1 every time C - Fetches the posts with likes between 100 and 200 and sets their _id as null D - Fetches the posts with likes between 100 and 200, sets the _id of the first document as null and then increments it 1 every time Answer : A Explanation The above query basically matches all the documents having likes between 100 and 200. After that, it just specifies that aggregation is not to be done with any specific column (_id:null) and increments the count every time. Thus calculating the total such posts. Show Answer Q 8 - Which of the following aggregation commands in MongoDB does not support sharded collections? A - aggregate B - mapReduce C - group D - All of the above Answer : C Explanation The group command in MongoDB groups documents in a collection by the specified key and performs simple aggregation functions, such as computing counts and sums. It is the most basic one and does not support such sharding concepts.s Show Answer Q 9 - Consider that you have the following two documents in the products collection: { "_id" : 1, "prices" : [ 60, 100, 200 ] } { "_id" : 2, "prices" : [ 20, 90, 150 ] } What will the following query result into:  db.products.update( { _id: 1, prices: 100 }, { $set: { "prices.$" : 111 } } ) A - Updates 60 to 100 B - Updates 100 to 111 C - Updates 60,100 and 200 to 111 D - Removes the three elements of the prices array and replaces it with only a single element 111 Answer : B Explanation The positional $ operator identifies an element in an array to update without explicitly specifying the position of the element in the array. To project, or return, an array element from a read operation, see the $ projection operator. Show Answer Q 10 - If you have created a compound index on (A,B, C) which of the following access pattern will not be able to utilize the index? A - A, B, C B - A, B C - B, C D - A Answer : C Explanation Since the index itself starts from A, it cannot be utilized it the input query is starting with B. Show Answer mongodb_questions_answers.htm New Quiz Previous Page Print Page Next Page   Advertisements Print  Add Notes  Bookmark this page  Report Error  Suggestions Save Close Dashboard Logout About us Refund Policy Terms of use Privacy Policy FAQ's Contact © Copyright 2021. All Rights Reserved.
