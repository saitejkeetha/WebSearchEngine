https://www.tutorialspoint.com/cplusplus/cplusplus_mock_test.htm
C++ Mock Test Ã— Home Jobs Tools Coding Ground Current Affairs UPSC Notes Online Tutors Whiteboard Tutorix Login Categories Academic Tutorials Big Data & Analytics Computer Programming Computer Science Databases DevOps Digital Marketing Engineering Tutorials Exams Syllabus Famous Monuments GATE Exams Tutorials Latest Technologies Machine Learning Mainframe Development Management Tutorials Mathematics Tutorials Microsoft Technologies Misc tutorials Mobile Development Java Technologies Python Technologies SAP Tutorials Programming Scripts Selected Reading Software Quality Soft Skills Telecom Tutorials UPSC IAS Exams Web Development Sports Tutorials XML Technologies Multi-Language Interview Questions Q/A Library eBooks Courses C++ Basics C++ Home C++ Overview C++ Environment Setup C++ Basic Syntax C++ Comments C++ Data Types C++ Variable Types C++ Variable Scope C++ Constants/Literals C++ Modifier Types C++ Storage Classes C++ Operators C++ Loop Types C++ Decision Making C++ Functions C++ Numbers C++ Arrays C++ Strings C++ Pointers C++ References C++ Date & Time C++ Basic Input/Output C++ Data Structures C++ Object Oriented C++ Classes & Objects C++ Inheritance C++ Overloading C++ Polymorphism C++ Abstraction C++ Encapsulation C++ Interfaces C++ Advanced C++ Files and Streams C++ Exception Handling C++ Dynamic Memory C++ Namespaces C++ Templates C++ Preprocessor C++ Signal Handling C++ Multithreading C++ Web Programming C++ Useful Resources C++ Questions and Answers C++ Quick Guide C++ Object Oriented C++ STL Tutorial C++ Standard Library C++ Useful Resources C++ Discussion Selected Reading UPSC IAS Exams Notes Developer's Best Practices Questions and Answers Effective Resume Writing HR Interview Questions Computer Glossary Who is Who C++ Mock Test Advertisements Previous Page Next Page   This section presents you various set of Mock Tests related to C++ Framework. You can download these sample mock tests at your local machine and solve offline at your convenience. Every mock test is supplied with a mock test key to let you verify the final score and grade yourself. Mock Test I Mock Test II Mock Test III Mock Test IV C++ Mock Test I Q 1 - The default access specifer for the class members is A - public B - private C - protected D - None of the above. Answer : B Explaination If a member/s appear in the class with following no access specifier, the default is private. Show Answer Q 2 - A trigraph character begins with A - # B - ## C - ? D - ?? Answer : C Explaination Few characters have alternative representation and start with ??. Eg. Fro [ equivalent is ??( Show Answer Q 3 - C++ does not supports the following A - Multilevel inheritance B - Hierarchical inheritance C - Hybrid inheritance D - None of the above. Answer : D Explaination C++ supports all the forms of inheritance. Show Answer Q 4 - One of the following is true for an inline function. A - It executes faster as it is treated as a macro internally B - It executes faster because it priority is more than normal function C - It doesnâ€™t executes faster compared to a normal function D - None of the above holds true for an inline function Answer : A Explaination As inline function gets expanded at the line of call like a macro it executes faster. Show Answer Q 5 - Choose the pure virtual function definition from the following. A - virtual void f()=0 { } B - void virtual f()=0 { } C - virtual void f() {} = 0; D - None of the above. Answer : D Explaination A pure virtual function cannot have a definition. Show Answer Q 6 - Abstract class is __ A - A class must contain all pure virtual functions B - A class must contain at least one pure virtual function C - A class may not contain pure virtual function. D - A class must contain pure virtual function defined outside the class. Answer : B Explaination It is sufficient to have one pure virtual function in the class to make it as an abstract class. Show Answer Q 7 - What is the output of the following program?  #include<iostream> using namespace std; class abc { void f(); void g(); int x; }; main() { cout<<sizeof(abc)<<endl; } A - 12 B - 4 C - 8 D - Compile error Answer : B Explaination Only the class member variables constitutes as the size of the class or its object.  #include<iostream> using namespace std; class abc { void f(); void g(); int x; }; main() { cout<<sizeof(abc)<<endl; } Show Answer Q 8 - What is the output of the following program?  #include<iostream> using namespace std; class abc { public: static int x; int i; abc() { i = ++x; } }; int abc::x; main() { abc m, n, p; cout<<m.x<<" "<<m.i<<endl; } A - 3 1 B - 3 3 C - 1 1 D - 1 3 Answer : A Explaination The static member variable â€˜xâ€™ shares common memory among all the objects created for the class.  #include<iostream> using namespace std; class abc { public: static int x; int i; abc() { i = ++x; } }; int abc::x; main() { abc m, n, p; cout<<m.x<<" "<<m.i<<endl; } Show Answer Q 9 - A constructor can be virtual. A - True B - False Answer : B Explaination The purpose of the constructor cannot be overridden in the derived class hence constructor cannot be a virtual. Show Answer Q 10 - Choose the operator which cannot be overloaded. A - / B - () C - :: D - % Answer : C Explaination Scope resolution (::) is not permitted to be overloaded. Show Answer Q 11 - Which operator is required to be overloaded as member function only? A - _ B - _ _ C - ++ (postfix version) D - = Answer : D Explaination Overloaded assignment operator does the job similar to copy constructor and is required to be overloaded as member function of the class. Show Answer Q 12 - Which of the following is not the keyword in C++? A - volatile B - friend C - extends D - this Answer : C Explaination All the rest are valid keywords of C++. Show Answer Q 13 - What is the output of the following program?  #include<iostream> using namespace std; class abc { public: int i; abc(int i) { i = i; } }; main() { abc m(5); cout<<m.i; } A - 5 B - Garbage C - Error at the statement i=i; D - Compile error: â€˜iâ€™ declared twice. Answer : B Explaination i=i, is assigning member variable to itself.  #include<iostream> using namespace std; class abc { public: int i; abc(int i) { i = i; } }; main() { abc m(5); cout<<m.i; } Show Answer Q 14 - By default the members of the structure are A - private B - protected C - public D - Access specifiers not applicable for structures. Answer : C Explaination If no access specifiers are specified for structure variables/functions, then the default is considered as public. Show Answer Q 15 - From the below class choose the proper definition of the member function f().  template <class T> class abc { void f(); }; A - template <class T>     void abc<T>::f() { } B - template<class T>     void abc::f() { } C - template<T>     void abc<class T>::f() { } D - template<T>     void abc<T>::f() { } Answer : A Explaination Show Answer Q 16 - Choose the respective delete operator usage for the expression â€˜ptr=new int[100]â€™. A - delete ptr; B - delete ptr[]; C - delete[] ptr; D - []delete ptr; Answer : C Explaination Show Answer Q 17 - â€˜cinâ€™ is an __ A - Class B - Object C - Package D - Namespace Answer : B Explaination Itâ€™s an object of istream class. Show Answer Q 18 - The operator used to access member function of a structure using its object. A - . B - -> C - * D - None of the above. Answer : A Explaination Just the way we use dot (.) operator to access members of the class, in similar it is used to access the members of the structure too. Show Answer Q 19 - A user defined header file is included by following statement in general. A - #include â€œfile.hâ€? B - #include <file.h> C - #include <file> D - #include file.h Answer : A Explaination With the syntax as in (a) the compiler first looks for the file in the present working directory and then in the default include path if not found. Show Answer Q 20 - Which data type can be used to hold a wide character in C++? A - unsigned char; B - int C - wchar_t D - none of the above. Answer : C Explaination wchar_t is the data type using which we can hold Unicode characters. Show Answer Q 21 - Which is the storage specifier used to modify the member variable even though the class object is a constant object? A - auto B - register C - static D - mutable Answer : D Explaination mutable is storage specifier introduced in C++ which is not available in C. A class member declared with mutable is modifiable though the object is constant. Show Answer Q 22 - The following operator can be used to calculate the value of one number raised to another. A - ^ B - ** C - ^^ D -None of the above Answer : D Explaination There is no such operator in C/C++. Show Answer Q 23 - Pick up the valid declaration for overloading ++ in postfix form where T is the class name. A - T operator++(); B - T operator++(int); C - T& operator++(); D - T& operator++(int); Answer : B Explaination The parameter int is just to signify that it is the postfix form overloaded. Shouldnâ€™t return reference as per its original behavior. Show Answer Q 24 - We can have varying number of arguments for the overloaded form of () operator. A - True B - False Answer : A Explaination Show Answer Q 25 - Operators sizeof and ?: A - Both can be overloaded B - Both cannot be overloaded C - Only sizeof can be overloaded D - Only ?: can be overloaded Answer : B Explaination Both the mentioned operators cannot be overloaded. Show Answer Answer Sheet Question Number Answer Key 1 B 2 C 3 D 4 A 5 D 6 B 7 B 8 A 9 B 10 C 11 D 12 C 13 B 14 C 15 A 16 C 17 B 18 A 19 A 20 C 21 D 22 D 23 B 24 A 25 B Download cpp_questions_answers.htm Previous Page Print Page Next Page   Advertisements Print  Add Notes  Bookmark this page  Report Error  Suggestions Save Close Dashboard Logout About us Refund Policy Terms of use Privacy Policy FAQ's Contact © Copyright 2021. All Rights Reserved.
